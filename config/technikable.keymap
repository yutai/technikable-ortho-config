/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

&soft_off {
    hold-time-ms = <5000>; // Only turn off if the key is held for 5 seconds or longer.
};

&ortho_transform {
    compatible = "zmk,matrix-transform";
    rows = <4>;
    cols = <12>;
    mapping = <
        0  1  2  3  4  5  6  7  8  9 10 11
        12 13 14 15 16 17 18 19 20 21 22 23
        24 25 26 27 28 29 30 31 32 33 34 35
        36 37 38 39 40 41 42 43 -- -- -- --
    >;
};

&conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
        if-layers = <NAV_L NUM_L>;
        then-layer = <SYM_L>;
    };
};

&keymap {
    compatible = "zmk,keymap";

    macros {
        macro_opt_cmd_1 {
            label = "OPT+CMD+1";
            bindings = <&kp LALT &kp LGUI &kp N1>;
        };
        macro_opt_cmd_2 {
            label = "OPT+CMD+2";
            bindings = <&kp LALT &kp LGUI &kp N2>;
        };
        macro_cmd_sft_8 {
            label = "CMD+SFT+8";
            bindings = <&kp LGUI &kp LSHIFT &kp N8>;
        };
        macro_cmd_sft_7 {
            label = "CMD+SFT+7";
            bindings = <&kp LGUI &kp LSHIFT &kp N7>;
        };
        macro_cmd_sft_4 {
            label = "CMD+SFT+4";
            bindings = <&kp LGUI &kp LSHIFT &kp N4>;
        };
        macro_cmd_ctrl_sft_4 {
            label = "CMD+CTRL+SFT+4";
            bindings = <&kp LGUI &kp LCTRL &kp LSHIFT &kp N4>;
        };
    };

    base_layer {
        label = "Base";
        bindings = <
            &kp ESC    &kp Q      &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
            &kp TAB    &kp A      &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L      &kp SEMI      &kp QUOT
            &kp LSHFT  &kp Z      &kp X      &kp C       &kp V          &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp RET
            &trans     &trans     &kp LCTRL  &kp LALT    &kp SPACE      &kp SPACE      &mo NUM_L        &mo NAV_L      &trans      &trans
        >;
    };

    sym_layer {
        label = "Sym";
        bindings = <
            &bt BT_CLR &trans     &trans     &trans      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &kp DEL
            &trans     &trans     &trans     &trans      &trans          &trans       &trans     &kp LARW       &kp DARW    &kp UARW   &kp RARW   &trans
            &trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3       &bt BT_SEL 4    &trans     &kp HOME       &kp PG_DN   &kp PG_UP  &kp END    &trans
            &trans     &trans     &trans     &trans      &trans          &trans       &trans     &trans
        >;
    };

    num_layer {
        label = "Num";
        bindings = <
            &kp GRAVE     &kp C_PREV   &kp C_PLAY   &kp C_NEXT   &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_DN   &kp N7       &kp N8       &kp N9       &kp N0       &trans
            &kp DEL       &trans       &macro_opt_cmd_1   &macro_opt_cmd_2   &macro_cmd_sft_8   &macro_cmd_sft_7   &trans   &kp N4       &kp N5       &kp N6       &kp PG_UP   &kp BSLH
            &trans        &trans       &trans       &macro_cmd_sft_4   &macro_cmd_ctrl_sft_4   &trans   &trans   &kp N1       &kp N2       &kp N3       &kp PG_DN   &trans
            &trans        &trans       &trans       &kp N0       &kp DOT      &mo NAV_L       &mo SYM_L     &trans       &trans
        >;
    };

    nav_layer {
        label = "Nav";
        bindings = <
            &trans     &kp LBRC   &kp LS(N7) &kp LS(N8)  &kp LS(N9)   &kp RBRC     &trans     &trans    &trans       &trans       &trans     &trans
            &trans     &kp COLON  &kp LS(N4) &kp LS(N5)  &kp LS(N6)   &kp PLUS     &trans     &trans    &trans       &trans       &trans     &trans
            &trans     &kp TILDE  &kp LS(N1) &kp LS(N2)  &kp LS(N3)   &kp LS(BSLH) &trans     &trans    &trans       &trans       &trans     &trans
            &trans     &trans     &trans     &trans      &mo NUM_L    &mo SYM_L    &trans     &trans
        >;
    };
};
